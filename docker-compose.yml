version: '3'
networks:
  default:
    driver: bridge
    # prevent conflict with openVPN connection, use dedicated subnet
    ipam:
      config:
        - subnet: 172.16.57.0/24
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: streets_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migration:
    image: node:16
    container_name: migration
    working_dir: /app
    volumes:
      - ./src/db:/app/src/db
      - ./src/db/package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./sequelize.config.js:/app/config/config.js
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/streets_db
      NODE_ENV: development
    command: sh -c "npm install && npm run migrate"

  consumer:
    image: node:16
    container_name: consumer
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./dist:/app/dist
      - ./dist/package.json:/app/dist/package.json
      - shared_node_modules:/app/src/node_modules
      - dist_node_modules:/app/dist/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    command: >
      sh -c "cd src && npm install &&
             cd consumer && npm install && npm run build &&
             cd /app/dist && npm install &&
             cd consumer && node index.js"

volumes:
  postgres_data:
  shared_node_modules:
  dist_node_modules:
